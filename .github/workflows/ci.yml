name: CI

on:
  push:
    branches:
      - master
      - '[0-9].[0-9]+'  # matches to backport branches, e.g. 3.6
    tags: [ 'v*' ]
  pull_request:
    branches:
      - master
      - '[0-9].[0-9]+'
  schedule:
    - cron:  '0 6 * * *'  # Daily 6AM UTC build


jobs:

  lint:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Cache PyPI
      uses: actions/cache@v2
      with:
        key: pip-lint-${{ hashFiles('requirements-dev.txt') }}
        path: ~/.cache/pip
        restore-keys: |
            pip-lint-
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: requirements-dev.txt
    - name: Install itself
      run: |
        pip install .
    - name: Lint
      run: |
        make lint
    - name: Prepare twine checker
      run: |
        pip install -U twine wheel
        python setup.py sdist bdist_wheel
    - name: Run twine checker
      run: |
        twine check dist/*

  test:
    name: Test
    needs: lint
    strategy:
      matrix:
        pyver: ['3.7', '3.8', '3.9']
        os: [ubuntu, macos, windows]
        include:
          - pyver: pypy-3.8
            os: ubuntu
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.pyver }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyver }}
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"    # - name: Cache
    - name: Cache PyPI
      uses: actions/cache@v2
      with:
        key: pip-ci-${{ runner.os }}-${{ matrix.pyver }}-${{ hashFiles('requirements-dev.txt') }}
        path: ${{ steps.pip-cache.outputs.dir }}
        restore-keys: |
            pip-ci-${{ runner.os }}-${{ matrix.pyver }}-
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: requirements-dev.txt
    - name: Install JS dependencies
      run: grablib
      env:
        PYTHONIOENCODING: 'utf-8'
    - name: Run unittests
      run: pytest
      env:
        COLOR: 'yes'
    - run: python -m coverage xml
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unit
        fail_ci_if_error: false

  check:  # This job does nothing and is only used for the branch protection
    if: always()

    needs:
    - test

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    # Run only on pushing a tag
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run:
        python -m pip install -U pip wheel twine
    - name: Install JS dependencies
      run: grablib
    - name: Make dists
      run:
        python setup.py sdist bdist_wheel
    - name: PyPI upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: pAzJhAD5HNzxvbNg/UwquwPXOp6V27gi4MpqCs6mK2Hy9h3Ii8vVWzEUx06v2aqT5b3P7FDBRW8+t9oL+aS/dZxeOtA/jNzROxMhFtRbpv1F/Mvd6ocz7yb3yg9WUlc7bhuyN6GUxsw4esATElQygqZucXRGsg+yauiTTd2X1CK6zrTz7/5lhF5H41oMzBKBZgvEUjDzaTs+C+B0bEifADVsI8QDa4EUTzCc93qf2z1jllDd/Jww9MK6xdBJJCoXjfBtWSjnoBANN/Ikthy8yY2PXvbLKH7K4Ri+ED72tLXThuTEsmquj20TnR30Hpm0LjwfdZ1+2O0X0PMyjMIRoATR0D9XdSP36FZs19zyRRFwHYKxZvXKSv+rZxz1rZYbbPojNW/498zlWcI8R9TxqPg/6dnrO1StnltLmN784AVBQr172CX/Ji3BF1bVytgdKqstGVN6d1JJWPuFVNfGpVHJJZEEuOBndK7yoSSV4zMva5wXplETVyGWfPiqvQCtylq8IatXbFxA0trCMW1kQEwBMBLbYrqx6ZIHQJ4Z46ng7OIYdRPod7fkK7e0lXU7OexfXad/UOWfkayOG1C93MWxeVho8ZQrBCdrHd1a5iujAfW8pk7Al8f2gS8L7nZTXUlkWK2ppX9PDOv1O0frtFc1prje+9AzROFC8UXxJk8=
      run: |
        twine upload dist/*
